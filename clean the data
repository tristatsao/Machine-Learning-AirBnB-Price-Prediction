library(readr)
library(dplyr)
library(lubridate)
library(tidyverse)
LA <- read.csv("C:/Users/dance/Desktop/Spring 22/BUMK746/LA_Listings3.csv") summary(LA)

#transfer variables to factors LA$Street <- as.factor(LA$Street)
LA$City <- as.factor(LA$City)
LA$Amenities <-as.factor(LA$Amenities)
LA$Property_type<- as.factor(LA$Property_type)
LA$Room_type<- as.factor(LA$Room_type)
LA$Country<- as.factor(LA$Country)
LA$State<- as.factor(LA$State)
LA$Neighbourhood_cleansed<- as.factor(LA$Neighbourhood_cleansed) #format the date LA$Calendar_last_scraped<-mdy(LA$Calendar_last_scraped) LA$Last_Review_Date <-mdy(LA$Last_Review_Date)
summary(LA)

#Dummy coded
LA$Host_Is_Superhost <- ifelse(LA$Host_Is_Superhost == "TRUE", 1,0)
#Create new variables
LA$Is_Apartment <- ifelse(LA$Property_type=="Apartment",1,0)
LA$Is_House <- ifelse(LA$Property_type=="House",1,0)
LA$condo <- ifelse(LA$Property_type=="Condominium",1,0)
LA$Townhouse <- ifelse(LA$Property_type=="Townhouse",1,0)
LA$Loft<- ifelse(LA$Property_type=="Loft",1,0)
LA$Guesthouse<- ifelse(LA$Property_type=="Guesthouse",1,0)
LA$entirehouse <- ifelse(LA$Room_type=="Entire home/apt",1,0)
LA$privateroom <- ifelse(LA$Room_type=="Private room",1,0)
LA$sharedroom <- ifelse(LA$Room_type=="Shared room",1,0)
LA$Hollywood_Neighbourhood <- ifelse(LA$Neighbourhood_cleansed=="Hollywood",1,0) LA$Venice_Neighbourhood <- ifelse(LA$Neighbourhood_cleansed=="Venice",1,0) LA$LongBeach_Neighbourhood <- ifelse(LA$Neighbourhood_cleansed=="Long Beach",1,0) LA$Downtown_Neighbourhood <- ifelse(LA$Neighbourhood_cleansed=="Downtown",1,0) LA$SantaMonica_Neighbourhood <- ifelse(LA$Neighbourhood_cleansed=="Santa Monica",1,0) LA$Recent_Review <-ifelse(is.na(LA$Last_Review_Date),as.Date("2020-12-31")-as.Date("2017-04-30"),as.Date("2020-1 2-31")-LA$Last_Review_Date)

#exploratory data and remove outliner
summary(LA) LA<-LA[LA$Number_of_reviews!=0&LA$Review_Scores_Rating!=0,]
boxplot(LA$Review_Scores_Rating) boxplot(LA$Host_total_listings_count) boxplot(LA$Price) boxplot(LA$Recent_Review) boxplot(LA$Number_of_reviews) boxplot(LA$Minimum_nights) boxplot(LA$Reviews_per_month)

quantile(LA$Review_Scores_Rating, probs = c(0.01)) LA<-LA[LA$Review_Scores_Rating>=60,]
quantile(LA$Host_total_listings_count, probs = c(0.99), na.rm = T) LA<-LA[LA$Host_total_listings_count<=36,]
quantile(LA$Price, probs = c(0.99), na.rm = T) LA<-LA[LA$Price<=650,]
quantile(LA$Recent_Review, probs = c(0.99),na.rm = T) LA<-LA[LA$Recent_Review<=2189.19,]
quantile(LA$Number_of_reviews, probs = c(0.99),na.rm = T) LA<-LA[LA$Number_of_reviews<=201,]
quantile(LA$Minimum_nights, probs = c(0.99),na.rm = T) LA<-LA[LA$Minimum_nights<=30,]
quantile(LA$Reviews_per_month, probs = c(0.99),na.rm = T) LA<-LA[LA$Reviews_per_month<=8.33,]

#transfer NA into mean/median of the variables
LA$Host_Response_Rate <- ifelse(is.na(LA$Host_Response_Rate), mean(LA$Host_Response_Rate,na.rm=TRUE),LA$Host_Response_Rate) LA$Host_total_listings_count <- ifelse(is.na(LA$Host_total_listings_count), median(LA$Host_total_listings_count,na.rm=TRUE),LA$Host_total_listings_count) LA$Accommodates <-ifelse(is.na(LA$Accommodates), median(LA$Accommodates,na.rm=TRUE),LA$Accommodates)
LA$Bathrooms <-ifelse(is.na(LA$Bathrooms), median(LA$Bathrooms,na.rm=TRUE),LA$Bathrooms)
LA$Bedrooms <-ifelse(is.na(LA$Bedrooms), median(LA$Bedrooms,na.rm=TRUE),LA$Bedrooms) LA$Maximum_nights <-ifelse(is.na(LA$Maximum_nights), median(LA$Maximum_nights,na.rm=TRUE),LA$Maximum_nights)

#drop some NA
LA<- LA %>% drop_na(Neighbourhood_cleansed)
summary(LA)

#number of columns after splitting by space, find 10-15% amenities Amenities<-data.frame(LA$Amenities)
colnames(Amenities)
install.packages('splitstackshape')
library(splitstackshape) Amenities_2<-cSplit(Amenities, "LA.Amenities", ";")

colnames(Amenities_2)
Amenities_3<-Amenities_2 %>% gather(col,amenities,LA.Amenities_01:LA.Amenities_45,na.rm = T)
Amenities_3$amenities<-tolower(Amenities_3$amenities)
Amenities_3<-Amenities_3 %>% count(amenities) Amenities_3<-Amenities_3[order(Amenities_3$n,decreasing = T),]
head(Amenities_3)

#find "24-hour check-in", "indoor fireplace", "lock on bedroom door", "pool", "elevator in building" in the LA dataset amenities
Amenities_list = c("24-hour check-in", "indoor fireplace", "lock on bedroom door", "pool", "elevator in building")
for (i in 1:length(Amenities_list)){ LA[Amenities_list[i]]<-ifelse(grepl(Amenities_list[i],LA$Amenities,ignore.case = TRUE),1,0)
}
head(LA)

#create a subset for modeling LA_sample<-LA[,c("Host_Response_Rate","Host_Is_Superhost","Host_total_listings_count","Acco mmodates","Bathrooms","Bedrooms","Price","Minimum_nights","Maximum_nights","Availability_3 65",
"Number_of_reviews","Review_Scores_Rating","Review_Scores_Accuracy",
"Review_Scores_Cleanliness","Review_Scores_Checkin","Review_Scores_Communication","Revie w_Scores_Location",
"Review_Scores_Value","Reviews_per_month","Is_Apartment","Is_House","condo","Townhouse","L oft","Guesthouse",
"Hollywood_Neighbourhood","Venice_Neighbourhood","LongBeach_Neighbourhood","Downtown_ Neighbourhood","SantaMonica_Neighbourhood",
"entirehouse","privateroom","sharedroom","Recent_Review","24-hour check-in", "indoor fireplace", "lock on bedroom door", "pool", "elevator in building")]
summary(LA_sample)

#turn blank into _
library(janitor) LA_sample<-clean_names(LA_sample)
write.csv(LA_sample, "LA_sample.csv",row.names = FALSE)

#Set training and testing dataset
library(caret)
set.seed(13343)
train_ind <- createDataPartition(y = LA_sample$review_scores_rating,p=.8,list = FALSE) training <- LA_sample[train_ind,]
test <- LA_sample[-train_ind,] summary(test)

#see correlation and check collinearity colnames(training)
summary(training) training_t<-training
training_t[] <- lapply(training_t, as.numeric) correlation<-data.frame(cor(training_t))

#delete "review_scores_cleanliness","bedrooms","review_scores_accuracy","is_house" training<-training[,-which(names(training) %in% c( "review_scores_accuracy","review_scores_cleanliness","bedrooms","is_house"))] test<-test[,-which(names(test) %in% c( "review_scores_accuracy","review_scores_cleanliness","bedrooms","is_house"))] colnames(training)
#variable selection using Forward-stepwise regression
library(lars)
y = training$review_scores_rating
x = training[,-which(names(training)%in%"review_scores_rating")] x_t<-as.matrix(x)
res = lars(x_t, y, type="stepwise") print(summary(res))
res

#cp=24.223 26 variables included, which are "review_scores_value", 'review_scores_communication', #host_is_superhost', 'host_total_listings_count', 'price',
#'number_of_reviews', 'privateroom', 'accommodates', 'is_apartment', 'review_scores_checkin', 'minimum_nights', 'lock_on_bedroom_door',
#'host_response_rate', 'pool', 'availability_365', 'maximum_nights', 'hollywood_neighbourhood', 'loft', #'bathrooms', 'review_scores_location', 'recent_review', 'reviews_per_month','guesthouse','santa_monica_neighbourhood', #'venice_neighbourhood','elevator_in_building'
#add review_scores_rating also. total 27 variables
training<-training[,c("review_scores_rating","review_scores_value", 'review_scores_communication', 'host_is_superhost', 'host_total_listings_count', 'price',
'number_of_reviews', 'privateroom', 'accommodates', 'is_apartment', 'review_scores_checkin', 'minimum_nights', 'lock_on_bedroom_door', 'host_response_rate', 'pool', 'availability_365', 'maximum_nights', 'hollywood_neighbourhood', 'loft', 'bathrooms', 'review_scores_location', 'recent_review', 'reviews_per_month', 'guesthouse', 'santa_monica_neighbourhood', 'venice_neighbourhood','elevator_in_building')]
test <- test[,c("review_scores_rating","review_scores_value", 'review_scores_communication', 'host_is_superhost', 'host_total_listings_count', 'price', 'number_of_reviews', 'privateroom', 'accommodates', 'is_apartment', 'review_scores_checkin', 'minimum_nights', 'lock_on_bedroom_door', 'host_response_rate', 'pool', 'availability_365', 'maximum_nights', 'hollywood_neighbourhood', 'loft',

'bathrooms', 'review_scores_location', 'recent_review', 'reviews_per_month', 'guesthouse', 'santa_monica_neighbourhood', 'venice_neighbourhood', 'elevator_in_building')]
